/* Generated by Yosys 0.40+50 (git sha1 0f9ee20ea, clang++ 15.0.0 -fPIC -Os) */

(* top =  1  *)
(* src = "verilog/self_composition_multiplier.sv:5.1-38.10" *)
module top(clk, a1, a2, b, in_valid, o1, o2, out_valid1, out_valid2);
  wire _00_;
  wire [1:0] _01_;
  (* src = "verilog/self_composition_multiplier.sv:66.25-66.36" *)
  wire _02_;
  (* src = "verilog/self_composition_multiplier.sv:66.40-66.50" *)
  wire _03_;
  (* src = "verilog/self_composition_multiplier.sv:65.34-65.39" *)
  wire _04_;
  (* src = "verilog/self_composition_multiplier.sv:66.25-66.50" *)
  wire _05_;
  (* src = "verilog/self_composition_multiplier.sv:70.77-70.93" *)
  (* unused_bits = "2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _06_;
  (* src = "verilog/self_composition_multiplier.sv:70.66-70.97" *)
  wire [31:0] _07_;
  wire _08_;
  wire [1:0] _09_;
  (* src = "verilog/self_composition_multiplier.sv:66.25-66.36" *)
  wire _10_;
  (* src = "verilog/self_composition_multiplier.sv:66.40-66.50" *)
  wire _11_;
  (* src = "verilog/self_composition_multiplier.sv:65.34-65.39" *)
  wire _12_;
  (* src = "verilog/self_composition_multiplier.sv:66.25-66.50" *)
  wire _13_;
  (* src = "verilog/self_composition_multiplier.sv:70.77-70.93" *)
  (* unused_bits = "2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _14_;
  (* src = "verilog/self_composition_multiplier.sv:70.66-70.97" *)
  wire [31:0] _15_;
  (* src = "verilog/self_composition_multiplier.sv:7.26-7.28" *)
  input a1;
  wire a1;
  (* src = "verilog/self_composition_multiplier.sv:8.26-8.28" *)
  input a2;
  wire a2;
  (* src = "verilog/self_composition_multiplier.sv:9.26-9.27" *)
  input b;
  wire b;
  (* src = "verilog/self_composition_multiplier.sv:6.11-6.14" *)
  input clk;
  wire clk;
  (* hdlname = "copy1 a" *)
  (* src = "verilog/self_composition_multiplier.sv:45.26-45.27" *)
  wire \copy1.a ;
  (* hdlname = "copy1 a_reg" *)
  (* src = "verilog/self_composition_multiplier.sv:50.24-50.29" *)
  reg \copy1.a_reg  = 1'h0;
  (* hdlname = "copy1 a_reg_" *)
  (* src = "verilog/self_composition_multiplier.sv:66.25-66.31" *)
  wire \copy1.a_reg_ ;
  (* hdlname = "copy1 a_reg_next" *)
  (* src = "verilog/self_composition_multiplier.sv:67.25-67.35" *)
  wire \copy1.a_reg_next ;
  (* hdlname = "copy1 b" *)
  (* src = "verilog/self_composition_multiplier.sv:46.26-46.27" *)
  wire \copy1.b ;
  (* hdlname = "copy1 b_reg" *)
  (* src = "verilog/self_composition_multiplier.sv:50.31-50.36" *)
  reg \copy1.b_reg  = 1'h0;
  (* hdlname = "copy1 b_reg_next" *)
  (* src = "verilog/self_composition_multiplier.sv:68.25-68.35" *)
  wire \copy1.b_reg_next ;
  (* hdlname = "copy1 busy" *)
  (* src = "verilog/self_composition_multiplier.sv:52.9-52.13" *)
  reg \copy1.busy  = 1'h0;
  (* hdlname = "copy1 busy_next" *)
  (* src = "verilog/self_composition_multiplier.sv:65.10-65.19" *)
  wire \copy1.busy_next ;
  (* hdlname = "copy1 clk" *)
  (* src = "verilog/self_composition_multiplier.sv:43.11-43.14" *)
  wire \copy1.clk ;
  (* hdlname = "copy1 counter" *)
  (* src = "verilog/self_composition_multiplier.sv:54.15-54.22" *)
  reg \copy1.counter ;
  (* hdlname = "copy1 counter_next" *)
  (* src = "verilog/self_composition_multiplier.sv:69.16-69.28" *)
  wire \copy1.counter_next ;
  (* hdlname = "copy1 coutner" *)
  (* src = "verilog/self_composition_multiplier.sv:62.9-62.16" *)
  wire \copy1.coutner ;
  (* hdlname = "copy1 finish" *)
  (* src = "verilog/self_composition_multiplier.sv:53.9-53.15" *)
  reg \copy1.finish  = 1'h0;
  (* hdlname = "copy1 finish_next" *)
  (* src = "verilog/self_composition_multiplier.sv:66.10-66.21" *)
  wire \copy1.finish_next ;
  (* hdlname = "copy1 in_valid" *)
  (* src = "verilog/self_composition_multiplier.sv:44.11-44.19" *)
  wire \copy1.in_valid ;
  (* hdlname = "copy1 o" *)
  (* src = "verilog/self_composition_multiplier.sv:47.34-47.35" *)
  wire [1:0] \copy1.o ;
  (* hdlname = "copy1 o_reg" *)
  (* src = "verilog/self_composition_multiplier.sv:51.31-51.36" *)
  reg [1:0] \copy1.o_reg  = 2'h0;
  (* hdlname = "copy1 o_reg_next" *)
  (* src = "verilog/self_composition_multiplier.sv:70.32-70.42" *)
  wire [1:0] \copy1.o_reg_next ;
  (* hdlname = "copy1 out_valid" *)
  (* src = "verilog/self_composition_multiplier.sv:48.12-48.21" *)
  wire \copy1.out_valid ;
  (* hdlname = "copy2 a" *)
  (* src = "verilog/self_composition_multiplier.sv:45.26-45.27" *)
  wire \copy2.a ;
  (* hdlname = "copy2 a_reg" *)
  (* src = "verilog/self_composition_multiplier.sv:50.24-50.29" *)
  reg \copy2.a_reg  = 1'h0;
  (* hdlname = "copy2 a_reg_" *)
  (* src = "verilog/self_composition_multiplier.sv:66.25-66.31" *)
  wire \copy2.a_reg_ ;
  (* hdlname = "copy2 a_reg_next" *)
  (* src = "verilog/self_composition_multiplier.sv:67.25-67.35" *)
  wire \copy2.a_reg_next ;
  (* hdlname = "copy2 b" *)
  (* src = "verilog/self_composition_multiplier.sv:46.26-46.27" *)
  wire \copy2.b ;
  (* hdlname = "copy2 b_reg" *)
  (* src = "verilog/self_composition_multiplier.sv:50.31-50.36" *)
  reg \copy2.b_reg  = 1'h0;
  (* hdlname = "copy2 b_reg_next" *)
  (* src = "verilog/self_composition_multiplier.sv:68.25-68.35" *)
  wire \copy2.b_reg_next ;
  (* hdlname = "copy2 busy" *)
  (* src = "verilog/self_composition_multiplier.sv:52.9-52.13" *)
  reg \copy2.busy  = 1'h0;
  (* hdlname = "copy2 busy_next" *)
  (* src = "verilog/self_composition_multiplier.sv:65.10-65.19" *)
  wire \copy2.busy_next ;
  (* hdlname = "copy2 clk" *)
  (* src = "verilog/self_composition_multiplier.sv:43.11-43.14" *)
  wire \copy2.clk ;
  (* hdlname = "copy2 counter" *)
  (* src = "verilog/self_composition_multiplier.sv:54.15-54.22" *)
  reg \copy2.counter ;
  (* hdlname = "copy2 counter_next" *)
  (* src = "verilog/self_composition_multiplier.sv:69.16-69.28" *)
  wire \copy2.counter_next ;
  (* hdlname = "copy2 coutner" *)
  (* src = "verilog/self_composition_multiplier.sv:62.9-62.16" *)
  wire \copy2.coutner ;
  (* hdlname = "copy2 finish" *)
  (* src = "verilog/self_composition_multiplier.sv:53.9-53.15" *)
  reg \copy2.finish  = 1'h0;
  (* hdlname = "copy2 finish_next" *)
  (* src = "verilog/self_composition_multiplier.sv:66.10-66.21" *)
  wire \copy2.finish_next ;
  (* hdlname = "copy2 in_valid" *)
  (* src = "verilog/self_composition_multiplier.sv:44.11-44.19" *)
  wire \copy2.in_valid ;
  (* hdlname = "copy2 o" *)
  (* src = "verilog/self_composition_multiplier.sv:47.34-47.35" *)
  wire [1:0] \copy2.o ;
  (* hdlname = "copy2 o_reg" *)
  (* src = "verilog/self_composition_multiplier.sv:51.31-51.36" *)
  reg [1:0] \copy2.o_reg  = 2'h0;
  (* hdlname = "copy2 o_reg_next" *)
  (* src = "verilog/self_composition_multiplier.sv:70.32-70.42" *)
  wire [1:0] \copy2.o_reg_next ;
  (* hdlname = "copy2 out_valid" *)
  (* src = "verilog/self_composition_multiplier.sv:48.12-48.21" *)
  wire \copy2.out_valid ;
  (* src = "verilog/self_composition_multiplier.sv:10.11-10.19" *)
  input in_valid;
  wire in_valid;
  (* src = "verilog/self_composition_multiplier.sv:11.34-11.36" *)
  output [1:0] o1;
  wire [1:0] o1;
  (* src = "verilog/self_composition_multiplier.sv:12.34-12.36" *)
  output [1:0] o2;
  wire [1:0] o2;
  (* src = "verilog/self_composition_multiplier.sv:13.12-13.22" *)
  output out_valid1;
  wire out_valid1;
  (* src = "verilog/self_composition_multiplier.sv:14.12-14.22" *)
  output out_valid2;
  wire out_valid2;
  assign _00_ = \copy1.counter  + (* src = "verilog/self_composition_multiplier.sv:69.43-69.54" *) 1'h1;
  assign _01_ = \copy1.o_reg  + (* src = "verilog/self_composition_multiplier.sv:70.57-70.98" *) _07_[1:0];
  assign _02_ = ~ (* src = "verilog/self_composition_multiplier.sv:66.25-66.36" *) \copy1.a_reg_ ;
  assign _03_ = ~ (* src = "verilog/self_composition_multiplier.sv:66.40-66.50" *) \copy1.b_reg ;
  assign \copy1.busy_next  = \copy1.in_valid  && (* src = "verilog/self_composition_multiplier.sv:65.22-65.39" *) _04_;
  assign \copy1.finish_next  = _05_ && (* src = "verilog/self_composition_multiplier.sv:66.24-66.59" *) \copy1.busy ;
  assign _04_ = ! (* src = "verilog/self_composition_multiplier.sv:65.34-65.39" *) \copy1.busy ;
  assign _05_ = _02_ || (* src = "verilog/self_composition_multiplier.sv:66.25-66.50" *) _03_;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy1.clk )
    \copy1.a_reg  <= \copy1.a_reg_next ;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy1.clk )
    \copy1.b_reg  <= \copy1.b_reg_next ;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy1.clk )
    \copy1.o_reg  <= \copy1.o_reg_next ;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy1.clk )
    \copy1.busy  <= \copy1.busy_next ;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy1.clk )
    \copy1.finish  <= \copy1.finish_next ;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy1.clk )
    \copy1.counter  <= \copy1.counter_next ;
  assign _06_[1:0] = \copy1.a_reg  << (* src = "verilog/self_composition_multiplier.sv:70.77-70.93" *) \copy1.counter ;
  assign \copy1.a_reg_next  = \copy1.busy_next  ? (* src = "verilog/self_composition_multiplier.sv:67.38-67.67" *) \copy1.a  : \copy1.a_reg ;
  assign \copy1.b_reg_next  = \copy1.busy_next  ? (* src = "verilog/self_composition_multiplier.sv:68.38-68.72" *) \copy1.b  : 1'h0;
  assign \copy1.counter_next  = \copy1.busy  ? (* src = "verilog/self_composition_multiplier.sv:69.31-69.54" *) _00_ : 1'h0;
  assign _07_[1:0] = \copy1.b_reg  ? (* src = "verilog/self_composition_multiplier.sv:70.66-70.97" *) _06_[1:0] : 2'h0;
  assign \copy1.o_reg_next  = \copy1.busy  ? (* src = "verilog/self_composition_multiplier.sv:70.45-70.98" *) _01_ : 2'h0;
  assign _08_ = \copy2.counter  + (* src = "verilog/self_composition_multiplier.sv:69.43-69.54" *) 1'h1;
  assign _09_ = \copy2.o_reg  + (* src = "verilog/self_composition_multiplier.sv:70.57-70.98" *) _15_[1:0];
  assign _10_ = ~ (* src = "verilog/self_composition_multiplier.sv:66.25-66.36" *) \copy2.a_reg_ ;
  assign _11_ = ~ (* src = "verilog/self_composition_multiplier.sv:66.40-66.50" *) \copy2.b_reg ;
  assign \copy2.busy_next  = \copy2.in_valid  && (* src = "verilog/self_composition_multiplier.sv:65.22-65.39" *) _12_;
  assign \copy2.finish_next  = _13_ && (* src = "verilog/self_composition_multiplier.sv:66.24-66.59" *) \copy2.busy ;
  assign _12_ = ! (* src = "verilog/self_composition_multiplier.sv:65.34-65.39" *) \copy2.busy ;
  assign _13_ = _10_ || (* src = "verilog/self_composition_multiplier.sv:66.25-66.50" *) _11_;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy2.clk )
    \copy2.a_reg  <= \copy2.a_reg_next ;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy2.clk )
    \copy2.b_reg  <= \copy2.b_reg_next ;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy2.clk )
    \copy2.o_reg  <= \copy2.o_reg_next ;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy2.clk )
    \copy2.busy  <= \copy2.busy_next ;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy2.clk )
    \copy2.finish  <= \copy2.finish_next ;
  (* src = "verilog/self_composition_multiplier.sv:72.5-79.8" *)
  always @(posedge \copy2.clk )
    \copy2.counter  <= \copy2.counter_next ;
  assign _14_[1:0] = \copy2.a_reg  << (* src = "verilog/self_composition_multiplier.sv:70.77-70.93" *) \copy2.counter ;
  assign \copy2.a_reg_next  = \copy2.busy_next  ? (* src = "verilog/self_composition_multiplier.sv:67.38-67.67" *) \copy2.a  : \copy2.a_reg ;
  assign \copy2.b_reg_next  = \copy2.busy_next  ? (* src = "verilog/self_composition_multiplier.sv:68.38-68.72" *) \copy2.b  : 1'h0;
  assign \copy2.counter_next  = \copy2.busy  ? (* src = "verilog/self_composition_multiplier.sv:69.31-69.54" *) _08_ : 1'h0;
  assign _15_[1:0] = \copy2.b_reg  ? (* src = "verilog/self_composition_multiplier.sv:70.66-70.97" *) _14_[1:0] : 2'h0;
  assign \copy2.o_reg_next  = \copy2.busy  ? (* src = "verilog/self_composition_multiplier.sv:70.45-70.98" *) _09_ : 2'h0;
  assign _15_[31:2] = 30'hxxxxxxxx;
  assign \copy2.coutner  = 1'h0;
  assign \copy2.o  = \copy2.o_reg ;
  assign \copy2.out_valid  = \copy2.finish ;
  assign \copy2.a  = a2;
  assign \copy2.b  = b;
  assign \copy2.clk  = clk;
  assign \copy2.in_valid  = in_valid;
  assign o2 = \copy2.o ;
  assign out_valid2 = \copy2.out_valid ;
  assign _07_[31:2] = 30'hxxxxxxxx;
  assign \copy1.coutner  = 1'h0;
  assign \copy1.o  = \copy1.o_reg ;
  assign \copy1.out_valid  = \copy1.finish ;
  assign \copy1.a  = a1;
  assign \copy1.b  = b;
  assign \copy1.clk  = clk;
  assign \copy1.in_valid  = in_valid;
  assign o1 = \copy1.o ;
  assign out_valid1 = \copy1.out_valid ;
endmodule
