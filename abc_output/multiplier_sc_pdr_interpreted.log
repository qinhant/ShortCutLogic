---------------Invariant Clauses-------------------- 
!(!copy2.busy[0] && copy1.busy[0])
!(copy2.busy[0] && !copy1.busy[0])
!(!copy1.finish[0] && copy2.finish[0])
!(copy1.finish[0] && !copy2.finish[0])



---------------PDR Log--------------------
ABC command line: "read yosys_output/self_composition_multiplier.aig; fold; pdr -v -w -d -I abc_output/self_composition_multiplier.pla; write_cex -n -m -f abc_output/multiplier_sc.cex;".

Warning: The network has no constraints.
VarMax = 300. FrameMax = 10000. QueMax = 0. TimeMax = 0. MonoCNF = no. SkipGen = no. SolveAll = no.
Frame Clauses                                                     Max Queue Flops Cex      Time
Trying to justify cube <prop=fail> in frame 1.
(!a1[0] && !a1[1] && !a1[2] && !a1[3] && !a2[0] && !a2[1] && !a2[2] && !a2[3] && !b[0] && !b[1] && !b[2] && !b[3] && copy1.finish[0] && !copy2.finish[0] && !assume_1_violate[0])
(!a1[0] && !a1[1] && !a1[2] && !a1[3] && !a2[0] && !a2[1] && !a2[2] && !a2[3] && !b[0] && !b[1] && !b[2] && !b[3] && copy1.finish[0] && !copy2.finish[0] && !assume_1_violate[0])
Cube:
32
Adding cube (copy1.finish[0]) to frame 1.
Trying to justify cube <prop=fail> in frame 1.
(!a1[0] && !a1[1] && !a1[2] && !a1[3] && !a2[0] && !a2[1] && !a2[2] && !a2[3] && !b[0] && !b[1] && b[2] && !b[3] && !copy1.finish[0] && copy2.finish[0] && !assume_1_violate[0])
(!a1[0] && !a1[1] && !a1[2] && !a1[3] && !a2[0] && !a2[1] && !a2[2] && !a2[3] && !b[0] && !b[1] && b[2] && !b[3] && !copy1.finish[0] && copy2.finish[0] && !assume_1_violate[0])
Cube:
34
Adding cube (copy2.finish[0]) to frame 1.
1 : 0 2                                                                 1     2      0.00 sec
Trying to justify cube <prop=fail> in frame 2.
(!a1[0] && !a1[1] && !a1[2] && !a1[3] && !a2[0] && !a2[1] && !a2[2] && !a2[3] && !b[0] && !b[1] && !b[2] && !b[3] && copy1.finish[0] && !copy2.finish[0] && !assume_1_violate[0])
(!a1[0] && !a1[1] && !a1[2] && !a1[3] && !a2[0] && !a2[1] && !a2[2] && !a2[3] && !b[0] && !b[1] && !b[2] && !b[3] && copy1.finish[0] && !copy2.finish[0] && !assume_1_violate[0])
Trying to justify cube (copy1.finish[0] && !copy2.finish[0] && !assume_1_violate[0]) in frame 1.
(!a1[0] && !a1[1] && a1[2] && !a1[3] && !a2[0] && !a2[1] && !a2[2] && !a2[3] && !b[0] && !b[1] && !b[2] && !b[3] && !assume_1_violate[0] && !copy2.busy[0] && copy1.busy[0])
(!a1[0] && !a1[1] && a1[2] && !a1[3] && !a2[0] && !a2[1] && !a2[2] && !a2[3] && !b[0] && !b[1] && !b[2] && !b[3] && !assume_1_violate[0] && !copy2.busy[0] && copy1.busy[0])
Cube:
39 84
Adding cube (!copy2.busy[0] && copy1.busy[0]) to frame 1.
Trying to justify cube (!assume_1_violate[0] && !copy2.busy[0] && copy1.busy[0]) in frame 1.
(!a1[0] && !a1[1] && a1[2] && !a1[3] && !a2[0] && !a2[1] && !a2[2] && !a2[3] && !b[0] && !b[1] && !b[2] && !b[3] && in_valid[0] && !assume_1_violate[0] && copy2.busy[0] && !copy1.busy[0])
(!a1[0] && !a1[1] && a1[2] && !a1[3] && !a2[0] && !a2[1] && !a2[2] && !a2[3] && !b[0] && !b[1] && !b[2] && !b[3] && in_valid[0] && !assume_1_violate[0] && copy2.busy[0] && !copy1.busy[0])
Cube:
38 85
Adding cube (copy2.busy[0] && !copy1.busy[0]) to frame 2.
Cube:
39 84
Adding cube (!copy2.busy[0] && copy1.busy[0]) to frame 2.
Cube:
32 35
Adding cube (copy1.finish[0] && !copy2.finish[0]) to frame 2.
Trying to justify cube <prop=fail> in frame 2.
(!a1[0] && !a1[1] && a1[2] && !a1[3] && !a2[0] && !a2[1] && a2[2] && !a2[3] && !b[0] && !b[1] && b[2] && !b[3] && !copy1.finish[0] && copy2.finish[0] && !assume_1_violate[0])
(!a1[0] && !a1[1] && a1[2] && !a1[3] && !a2[0] && !a2[1] && a2[2] && !a2[3] && !b[0] && !b[1] && b[2] && !b[3] && !copy1.finish[0] && copy2.finish[0] && !assume_1_violate[0])
Cube:
33 34
Adding cube (!copy1.finish[0] && copy2.finish[0]) to frame 2.
2 : 0 3 4                                                               3     4      0.00 sec
3 : 0 2 0 4                                                             0     4      0.00 sec
Invariant F[2] : 4 clauses with 4 flops (out of 43) (cex = 0, ave = 3.00)
Verification of invariant with 4 clauses was successful.  Time =     0.00 sec
Inductive invariant was written into file "abc_output/self_composition_multiplier.pla".
Dumped inductive invariant in file "abc_output/self_composition_multiplier.pla".
Block =    4  Oblig =     9  Clause =     7  Call =    32 (sat=50.0%)  Cex =   0  Start =   0
SAT solving =     0.00 sec (  2.10 %)
unsat     =     0.00 sec (  0.13 %)
sat       =     0.00 sec (  1.97 %)
Generalize  =     0.00 sec (  1.40 %)
Push clause =     0.00 sec (  0.73 %)
Ternary sim =     0.00 sec (  0.51 %)
Containment =     0.00 sec (  0.00 %)
CNF compute =     0.00 sec (  0.39 %)
Refinement  =     0.00 sec (  0.00 %)
TOTAL       =     0.01 sec (100.00 %)
Property proved.  Time =     0.01 sec
Counter-example is not available.
